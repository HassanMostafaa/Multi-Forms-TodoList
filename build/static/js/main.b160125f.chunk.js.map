{"version":3,"sources":["App.js","index.js"],"names":["App","useState","bodyInpVal","setBodyInpVal","titleInpVal","setTitleInpVal","showAddCard","setShowAddCard","date","Date","now","userName","setUserName","showUserNameForm","setShowUserNameForm","id","title","body","data","setData","useEffect","localStorage","getItem","JSON","parse","setItem","stringify","className","onClick","RiUserFollowLine","type","name","placeholder","onChange","e","target","value","motion","div","initial","opacity","animate","exit","toDateString","addingCard","length","console","log","addCard","map","card","index","layout","transition","delay","cardIndex","filtered","filter","removeCard","AiTwotoneDelete","ul","ix","splice","removeBody","RiDeleteBin5Line","push","alert","addBody","AiOutlinePlus","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b160125f.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { motion } from \"framer-motion\";\nimport { RiUserFollowLine } from \"react-icons/ri\";\nimport { AiTwotoneDelete, AiOutlinePlus } from \"react-icons/ai\";\nimport { RiDeleteBin5Line } from \"react-icons/ri\";\n\nfunction App() {\n  // const data =\n  const [bodyInpVal, setBodyInpVal] = useState(\"\");\n  const [titleInpVal, setTitleInpVal] = useState(\"\");\n  const [showAddCard, setShowAddCard] = useState(false);\n  const date = new Date(Date.now());\n  const [userName, setUserName] = useState(\"Sign In\");\n  const [showUserNameForm, setShowUserNameForm] = useState(false);\n  const [data, setData] = useState([\n    {\n      id: 1,\n      title: \"Todo Card\",\n      body: [\"Item One\", \"Item Two\"],\n    },\n    {\n      id: 2,\n      title: \"Example Card\",\n      body: [\"Item One\", \"Item Two\"],\n    },\n  ]);\n\n  useEffect(() => {\n    !localStorage.getItem(\"DATA\")\n      ? localStorage.setItem(\"DATA\", JSON.stringify(data))\n      : setData(JSON.parse(localStorage.getItem(\"DATA\")));\n\n    !localStorage.getItem(\"USER NAME\")\n      ? setShowUserNameForm(true)\n      : setUserName(localStorage.getItem(\"USER NAME\"));\n  }, []);\n\n  const removeCard = (cardIndex) => {\n    const filtered = data.filter((card) => card.id !== data[cardIndex].id);\n    console.log(filtered);\n    setData(filtered);\n\n    localStorage.setItem(\"DATA\", JSON.stringify(filtered));\n  };\n\n  const removeBody = (card, ix) => {\n    setData([...data], {\n      id: card.id,\n      title: card.title,\n      body: card.body.splice(ix, 1),\n    });\n\n    localStorage.setItem(\"DATA\", JSON.stringify(data));\n  };\n\n  const addBody = (card) => {\n    if (bodyInpVal !== \"\") {\n      setData([...data], {\n        id: card.id,\n        title: titleInpVal,\n        body: card.body.push(bodyInpVal),\n      });\n      localStorage.setItem(\"DATA\", JSON.stringify(data));\n    } else {\n      alert(\"Can not create empty body\");\n    }\n  };\n\n  const addCard = () => {\n    if (titleInpVal === \"\") {\n      const addingCard = [\n        ...data,\n        {\n          id: data.length + 1,\n          title: `${date.toDateString()}`,\n          body: [],\n        },\n      ];\n      setData(addingCard);\n      console.log(addingCard);\n      setShowAddCard(false);\n\n      localStorage.setItem(\"DATA\", JSON.stringify(addingCard));\n    } else {\n      setData([\n        ...data,\n        {\n          id: data.length + 1,\n          title: titleInpVal,\n          body: [],\n        },\n      ]);\n      setShowAddCard(false);\n\n      localStorage.setItem(\"DATA\", JSON.stringify(data));\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"nav\">\n        <span onClick={() => setShowUserNameForm(true)}>\n          {\" \"}\n          {RiUserFollowLine()}\n          {userName}\n        </span>\n      </div>\n\n      {showUserNameForm && (\n        <div className=\"signInForm\">\n          <h2>Profile Name</h2>\n          <p>\n            You Can Leave It Empty or Change it any time by clicking on Sign\n            in/Your Name on top right corner\n          </p>\n          <input\n            type=\"text\"\n            name=\"\"\n            id=\"\"\n            placeholder=\"Enter Your Name\"\n            onChange={(e) => setUserName(e.target.value)}\n          />\n          <button\n            onClick={() => {\n              if (userName === \"\") {\n                localStorage.setItem(\"USER NAME\", \"Sign In\");\n                setShowUserNameForm(!showUserNameForm);\n                setUserName(\"Sign In\");\n              } else {\n                localStorage.setItem(\"USER NAME\", userName);\n                setShowUserNameForm(!showUserNameForm);\n              }\n            }}\n          >\n            Assign New User Name\n          </button>\n        </div>\n      )}\n\n      <div className=\"app\">\n        <div className=\"body\">\n          {showAddCard && (\n            <motion.div\n              initial={{ opacity: 0 }}\n              animate={{ opacity: 1 }}\n              exit={{ opacity: 0 }}\n              className=\"add-card-form\"\n            >\n              <p\n                className=\"closeAddForm\"\n                onClick={() => setShowAddCard(!showAddCard)}\n              >\n                x\n              </p>\n              <p>\n                In case the Card Title left empty a new Card will be created\n                with today's Date which is <br />{\" \"}\n                <strong>\"{date.toDateString()}\"</strong>\n              </p>\n              <input\n                type=\"text\"\n                placeholder=\"Enter New Card's Title...\"\n                value={titleInpVal}\n                onChange={(e) => setTitleInpVal(e.target.value)}\n              />\n\n              <button onClick={() => addCard()}>Add Card</button>\n            </motion.div>\n          )}\n          <button\n            className=\"createCard\"\n            onClick={() => setShowAddCard(!showAddCard)}\n          >\n            Create a New Card +\n          </button>\n          <div className=\"cardsList\">\n            {data &&\n              data.map((card, index) => (\n                <motion.div\n                  layout\n                  initial={{ opacity: 0 }}\n                  animate={{ opacity: 1 }}\n                  exit={{ opacity: 0 }}\n                  transition={{ delay: index / 10 }}\n                  className=\"card\"\n                  key={index}\n                >\n                  <p className=\"deleteCard\" onClick={() => removeCard(index)}>\n                    {AiTwotoneDelete()}\n                    Delete Card\n                  </p>\n                  <h3 className=\"cardTitle\">{card.title}</h3>\n\n                  <motion.ul layout>\n                    {card.body &&\n                      card.body.map((body, ix) => (\n                        <li key={ix}>\n                          <div>{body} </div>\n                          <button onClick={() => removeBody(card, ix)}>\n                            {RiDeleteBin5Line()}\n                          </button>\n                        </li>\n                      ))}\n                    <input\n                      type=\"text\"\n                      className=\"bodyInput\"\n                      // value={bodyInpVal}\n                      onChange={(e) => setBodyInpVal(e.target.value)}\n                      placeholder=\" Enter New Item...\"\n                    />\n                    <button\n                      className=\"addNewItem\"\n                      onClick={() => addBody(card)}\n                    >\n                      Add an Item{\" \"}\n                      <span className=\"icon\">{AiOutlinePlus()}</span>\n                    </button>\n                    <br />\n                    <br />\n                  </motion.ul>\n                </motion.div>\n              ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}